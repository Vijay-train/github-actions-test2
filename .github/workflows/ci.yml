name: CI
on:
  pull_request: # on PR in develop branch
    branches: [develop]

  push: # on push in develop branch
    branches: [develop]

# 0) Checkout code locally
# 1) Install dependencies
# 2) Check code formatting with prettier
# 3) Run Automated tests
# 4) Upload code coverage as Artifact
# 5) Cache dependencies
# ## only for Push
# 6) Build
# 7) Deploy to staging

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache modules
        uses: actions/cache@v1 # Action to cache dependencies based on some key. If key is found, then it will pick up from caches
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json')}}
      - name: use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"
      - run: npm ci
      - run: npm run format:check
      - run: npm test -- --coverage
        env:
          CI: true
      
      # Step : upload Test coverage
      # Pattern : How to upload artifacts to WF run
      - name: upload Test coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage
      # build and deploy only on push to develop
      - name: Build project
        if: github.event_name == 'push' # not the if condition only only on push
        run: npm run build

      # Step : upload Build
      # Pattern : How to upload artifacts to WF run
      - name: upload Build 
        if: github.event_name == 'push' # not the if condition only only on push
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build

      - name: Deploy to staging
        if: github.event_name == 'push'
        run: npx surge --project ./build --domain tough-basketball.surge.sh #this will instal and use surge
        env: # surge needs creds to authenticste, we will put those as secrets and access it here.
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN}}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN}}
